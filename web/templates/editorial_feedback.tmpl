<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <base href="{{basePath}}">
    <title>Editorial Feedback - HappyCow</title>
    <style>
        * { margin: 0; padding: 0; box-sizing: border-box; }
        body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; background: #f5f7fa; }
        .container { max-width: 1400px; margin: 0 auto; padding: 20px; }
        .header { background: #2c3e50; color: white; padding: 20px 0; margin-bottom: 30px; }
        .nav { display: flex; gap: 20px; margin-bottom: 30px; }
        .nav a { padding: 10px 20px; background: white; color: #2c3e50; text-decoration: none; border-radius: 5px; }
        .nav a.active, .nav a:hover { background: #3498db; color: white; }
        .section { background: white; padding: 20px; border-radius: 8px; margin-bottom: 20px; box-shadow: 0 2px 10px rgba(0,0,0,0.1); }
        .stats-summary { display: flex; gap: 30px; padding: 15px; background: #f8f9fa; border-radius: 5px; margin-bottom: 20px; }
        .stat-item { display: flex; flex-direction: column; }
        .stat-value { font-size: 2em; font-weight: bold; }
        .stat-label { color: #666; font-size: 0.9em; }
        .stat-up { color: #27ae60; }
        .stat-down { color: #e74c3c; }
        .table { width: 100%; border-collapse: collapse; }
        .table th, .table td { padding: 12px; text-align: left; border-bottom: 1px solid #ddd; }
        .table th { background: #f8f9fa; font-weight: 600; position: sticky; top: 0; }
        .feedback-badge { padding: 4px 12px; border-radius: 4px; font-size: 14px; font-weight: bold; display: inline-block; }
        .feedback-up { background: #d4edda; color: #155724; }
        .feedback-down { background: #f8d7da; color: #721c24; }
        .pagination { display: flex; justify-content: center; gap: 10px; margin-top: 20px; }
        .pagination a { padding: 8px 12px; background: white; border: 1px solid #ddd; color: #333; text-decoration: none; border-radius: 4px; }
        .pagination a.active { background: #3498db; color: white; border-color: #3498db; }
        .pagination a:hover:not(.active) { background: #f0f0f0; }
        .comment-cell { max-width: 300px; }
        .comment-text { max-height: 60px; overflow: hidden; text-overflow: ellipsis; white-space: pre-wrap; word-break: break-word; }
        .comment-text.expanded { max-height: none; }
        .expand-btn { color: #3498db; cursor: pointer; font-size: 0.85em; text-decoration: underline; }
        .venue-link { color: #3498db; text-decoration: none; }
        .venue-link:hover { text-decoration: underline; }
        @media (max-width: 768px) {
            .stats-summary { flex-direction: column; gap: 15px; }
            .table { font-size: 0.9em; }
            .comment-cell { max-width: 200px; }
        }
    </style>
</head>
<body>
    <div class="header">
        <div class="container">
            <h1>üìù Editorial Feedback</h1>
        </div>
    </div>

    <div class="container">
        <nav class="nav">
            <a href="{{basePath}}">Dashboard</a>
            <a href="{{basePath}}venues/pending">Pending Venues</a>
            <a href="{{basePath}}venues/manual-review">Pending Manual Review</a>
            <a href="{{basePath}}validation/history">History</a>
            <a href="{{basePath}}analytics">Analytics</a>
            <a href="{{basePath}}editorial-feedback" class="active">Editorial Feedback</a>
        </nav>

        <div class="section">
            <h2>Feedback Summary</h2>
            <div class="stats-summary">
                <div class="stat-item">
                    <span class="stat-value">{{.Stats.Total}}</span>
                    <span class="stat-label">Total Feedback</span>
                </div>
                <div class="stat-item">
                    <span class="stat-value stat-up">{{.Stats.ThumbsUp}} üëç</span>
                    <span class="stat-label">Thumbs Up</span>
                </div>
                <div class="stat-item">
                    <span class="stat-value stat-down">{{.Stats.ThumbsDown}} üëé</span>
                    <span class="stat-label">Thumbs Down</span>
                </div>
            </div>
        </div>

        <div class="section">
            <h2>All Feedback ({{.Total}} total records, Page {{.Page}} of {{.TotalPages}})</h2>
            <table class="table">
                <thead>
                    <tr>
                        <th>Date</th>
                        <th>Venue ID</th>
                        <th>Venue Name</th>
                        <th>Feedback</th>
                        <th>Prompt Version</th>
                        <th>Comment</th>
                    </tr>
                </thead>
                <tbody>
                    {{if .FeedbackList}}
                        {{range .FeedbackList}}
                        <tr>
                            <td>{{.CreatedAt.Format "2006-01-02 15:04"}}</td>
                            <td><a href="{{basePath}}venues/{{.VenueID}}" class="venue-link">{{.VenueID}}</a></td>
                            <td>
                                {{if .VenueName}}
                                    <a href="{{basePath}}venues/{{.VenueID}}" class="venue-link">{{.VenueName}}</a>
                                {{else}}
                                    <span style="color: #999;">Unknown</span>
                                {{end}}
                            </td>
                            <td>
                                {{if eq .FeedbackType "thumbs_up"}}
                                    <span class="feedback-badge feedback-up">üëç Thumbs Up</span>
                                {{else}}
                                    <span class="feedback-badge feedback-down">üëé Thumbs Down</span>
                                {{end}}
                            </td>
                            <td>
                                {{if .PromptVersion}}
                                    {{.PromptVersion}}
                                {{else}}
                                    <span style="color: #999;">N/A</span>
                                {{end}}
                            </td>
                            <td class="comment-cell">
                                {{if .Comment}}
                                    <div class="comment-text" id="comment-{{.ID}}">{{.Comment}}</div>
                                    {{if gt (len .Comment) 100}}
                                        <span class="expand-btn" onclick="toggleComment({{.ID}})">Show more</span>
                                    {{end}}
                                {{else}}
                                    <span style="color: #999;">No comment</span>
                                {{end}}
                            </td>
                        </tr>
                        {{end}}
                    {{else}}
                        <tr>
                            <td colspan="6" style="text-align: center; padding: 40px; color: #999;">
                                No feedback submitted yet.
                            </td>
                        </tr>
                    {{end}}
                </tbody>
            </table>
        </div>

        {{if gt .TotalPages 1}}
        <div class="pagination">
            {{if gt .Page 1}}
                <a href="?page={{add .Page -1}}">¬´ Previous</a>
            {{end}}

            {{range $i := seq 1 .TotalPages}}
                {{if eq $i $.Page}}
                    <a href="#" class="active">{{$i}}</a>
                {{else if or (le $i 3) (ge $i (add $.TotalPages -2)) (and (ge $i (add $.Page -1)) (le $i (add $.Page 1)))}}
                    <a href="?page={{$i}}">{{$i}}</a>
                {{end}}
            {{end}}

            {{if lt .Page .TotalPages}}
                <a href="?page={{add .Page 1}}">Next ¬ª</a>
            {{end}}
        </div>
        {{end}}
    </div>

    <script>
        function toggleComment(id) {
            const element = document.getElementById('comment-' + id);
            const btn = element.nextElementSibling;

            if (element.classList.contains('expanded')) {
                element.classList.remove('expanded');
                btn.textContent = 'Show more';
            } else {
                element.classList.add('expanded');
                btn.textContent = 'Show less';
            }
        }
    </script>
</body>
</html>
