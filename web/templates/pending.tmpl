<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <base href="{{basePath}}">
    <title>Pending Venues - HappyCow Validation</title>
    {{template "global_header_style" .}}
    <style>
        .page-intro { margin-bottom: 24px; }
        .page-intro h1 { font-size: 28px; font-weight: 600; color: #1f2933; margin-bottom: 6px; }
        .page-intro p { color: #6b7b8a; font-size: 14px; }
        .filters { background: #ffffff; padding: 20px; border-radius: 12px; margin-bottom: 28px; box-shadow: 0 6px 20px rgba(15, 23, 42, 0.05); }
        .filters form { display: flex; gap: 15px; align-items: center; flex-wrap: wrap; }
        .filters input { padding: 10px 14px; border: 1px solid #d9e2ec; border-radius: 8px; font-size: 14px; }
        .btn { display: inline-flex; align-items: center; gap: 6px; padding: 9px 16px; background: #2c7be5; color: white; text-decoration: none; border-radius: 8px; border: none; cursor: pointer; font-weight: 600; font-size: 14px; }
        .btn:hover { filter: brightness(0.95); }
        .btn-secondary { background: #e4e7eb; color: #1f2933; }
        .btn-success { background: #1f8a4c; color: #fff; }
        .btn-danger { background: #d64545; color: #fff; }
        .btn-warning { background: #f4b740; color: #1f2933; }
        .btn-sm { padding: 4px 8px; font-size: 12px; border-radius: 6px; }
        .list-section { background: white; border-radius: 12px; box-shadow: 0 10px 24px rgba(15, 23, 42, 0.05); overflow: hidden; }
        .list-section h2 { font-size: 20px; font-weight: 600; color: #1f2933; padding: 20px 24px; border-bottom: 1px solid #e0e6ed; }
        .table { width: 100%; border-collapse: collapse; }
        .table thead th { background: #f8fafc; font-weight: 600; font-size: 12px; text-transform: uppercase; letter-spacing: 0.08em; color: #6b7b8a; padding: 14px 16px; position: sticky; top: 0; z-index: 5; }
        .table tbody td { padding: 14px 16px; border-bottom: 1px solid #e0e6ed; font-size: 14px; color: #3e4c59; background: #fff; }
        .table tbody tr:hover td { background: #f8fafc; }
        .venue-row { cursor: pointer; }
        .venue-details { display: none; background: #f8fafc; }
        .venue-details.expanded { display: table-row; }
        .status-token { display: inline-flex; align-items: center; gap: 6px; padding: 4px 8px; border-radius: 999px; font-size: 12px; font-weight: 600; background: #f1f5f9; color: #1f2933; }
        .pagination { display: flex; justify-content: center; gap: 10px; margin: 24px 0 0; }
        .pagination a { padding: 8px 16px; background: #fff; border: 1px solid #d9e2ec; color: #1f2933; text-decoration: none; border-radius: 8px; font-weight: 500; }
        .pagination a.active { background: #2c7be5; color: white; border-color: #2c7be5; }
        .batch-controls { margin-bottom: 20px; padding: 16px; border-radius: 12px; background: #fef3c7; border: 1px solid #fcd34d; display: none; }
        .selected-count { font-weight: 600; color: #8a6d1f; }
        .actions-column { white-space: nowrap; display: flex; gap: 8px; }
        @media (max-width: 768px) {
            .table { font-size: 13px; }
            .filters form { flex-direction: column; align-items: stretch; }
        }
    </style>
</head>
<body class="layout-shell">
    {{template "global_header" .}}
    <div class="layout-content" style="max-width: 1400px;">
        <header class="page-intro">
            <h1>ðŸ“‹ New Venues â€” List</h1>
            <p>Browse new submissions, launch AVA reviews, or dive into details for manual validation.</p>
        </header>

        <div class="filters">
            <form method="GET">
                <input type="text" name="search" value="{{.Search}}" placeholder="Search venues...">
                <button type="submit" class="btn">Filter</button>
                <a href="{{basePath}}venues/pending" class="btn btn-secondary">Clear</a>
            </form>
        </div>

        <div class="batch-controls" id="batch-controls" style="display:none;">
            <div class="selected-count" id="selected-count">0 venues selected</div>
            <div style="margin-top: 10px; display: flex; gap: 10px; flex-wrap: wrap; align-items: center;">
                <button id="start-ai-btn" class="btn btn-success" onclick="startAIForSelected()" disabled>ðŸš€ Start AVA Reviews for selected (0) venues</button>
                <button class="btn" onclick="selectAll()">Select All</button>
                <button class="btn" onclick="selectNone()">Select None</button>
            </div>
        </div>

        <section class="list-section">
            <h2>Venues ({{.Total}} total â€¢ Page {{.Page}} of {{.TotalPages}})</h2>
            <table class="table">
                <thead>
                    <tr>
                        <th><input type="checkbox" id="select-all" onchange="toggleSelectAll()"></th>
                        <th>ID</th>
                        <th>Name</th>
                        <th>Location</th>
                        <th>Submitter</th>
                        <th>Authority</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    {{range .Venues}}
                    <tr class="venue-row" onclick="toggleVenueDetails({{.Venue.ID}})">
                        <td><input type="checkbox" class="venue-checkbox" value="{{.Venue.ID}}" onclick="event.stopPropagation(); updateBatchControls()"></td>
                        <td>{{.Venue.ID}}</td>
                        <td><strong>{{.Venue.Name}}</strong></td>
                        <td>{{.Venue.Location}}</td>
                        <td>{{.User.Username}}</td>
                        <td>
                            {{if .User.Trusted}}<span class="status-token" title="Trusted user">âœ… Trusted</span>{{end}}
                            {{if .IsVenueAdmin}}<span class="status-token" title="Venue owner">ðŸ‘‘ Owner</span>{{end}}
                            {{if .AmbassadorLevel}}<span class="status-token" title="Ambassador">ðŸŒŸ Ambassador</span>{{end}}
                            {{if not (or .User.Trusted .IsVenueAdmin .AmbassadorLevel)}}<span class="status-token">Regular</span>{{end}}
                        </td>
                        <td class="actions-column">
                            <a href="{{basePath}}venues/{{.Venue.ID}}" class="btn btn-sm" onclick="event.stopPropagation()">View</a>
                        </td>
                    </tr>
                    <tr class="venue-details" id="details-{{.Venue.ID}}">
                        <td colspan="7">
                            <div style="padding: 15px;">
                                <div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); gap: 15px;">
                                    <div><strong>Phone:</strong> {{if .Venue.Phone}}{{.Venue.Phone}}{{else}}N/A{{end}}</div>
                                    <div><strong>Website:</strong> {{if .Venue.URL}}<a href="{{.Venue.URL}}" target="_blank">{{.Venue.URL}}</a>{{else}}N/A{{end}}</div>
                                    <div><strong>Created:</strong> {{.Venue.CreatedAt.Format "2006-01-02"}}</div>
                                </div>
                                {{if .Venue.AdditionalInfo}}
                                    <div style="margin-top: 10px;"><strong>Description:</strong></div>
                                    <div style="background: #f8f9fa; padding: 10px; border-radius: 4px; margin-top: 5px;">{{.Venue.AdditionalInfo}}</div>
                                {{end}}
                            </div>
                        </td>
                    </tr>
                    {{end}}
                </tbody>
            </table>
        </section>

        <div class="pagination">
            {{if gt .Page 1}}
                <a href="{{basePath}}venues/pending?page={{add .Page -1}}&search={{.Search}}">Â« Previous</a>
            {{end}}
            {{range $i := seq 1 .TotalPages}}
                {{if eq $i $.Page}}
                    <a href="#" class="active">{{$i}}</a>
                {{else if or (le $i 3) (ge $i (add $.TotalPages -2)) (and (ge $i (add $.Page -1)) (le $i (add $.Page 1))) }}
                    <a href="{{basePath}}venues/pending?page={{$i}}&search={{$.Search}}">{{$i}}</a>
                {{end}}
            {{end}}
            {{if lt .Page .TotalPages}}
                <a href="{{basePath}}venues/pending?page={{add .Page 1}}&search={{.Search}}">Next Â»</a>
            {{end}}
        </div>
    </div>

    <script>
        const basePath = '{{basePath}}';
        function toggleVenueDetails(venueId) {
            const details = document.getElementById('details-' + venueId);
            details.classList.toggle('expanded');
        }
        
        function updateBatchControls() {
            const checkboxes = document.querySelectorAll('.venue-checkbox:checked');
            const batchControls = document.getElementById('batch-controls');
            const selectedCountLabel = document.getElementById('selected-count');
            const startButton = document.getElementById('start-ai-btn');
            const count = checkboxes.length;

            selectedCountLabel.textContent = `${count} venue${count === 1 ? '' : 's'} selected`;
            startButton.textContent = `ðŸš€ Start AVA Reviews for selected (${count}) venues`;
            startButton.disabled = count === 0;
            batchControls.style.display = count > 0 ? 'block' : 'none';
        }
        
        function toggleSelectAll() {
            const selectAllCheckbox = document.getElementById('select-all');
            document.querySelectorAll('.venue-checkbox').forEach(cb => {
                cb.checked = selectAllCheckbox.checked;
            });
            updateBatchControls();
        }
        
        function selectAll() {
            document.querySelectorAll('.venue-checkbox').forEach(cb => cb.checked = true);
            document.getElementById('select-all').checked = true;
            updateBatchControls();
        }
        
        function selectNone() {
            document.querySelectorAll('.venue-checkbox').forEach(cb => cb.checked = false);
            document.getElementById('select-all').checked = false;
            updateBatchControls();
        }
        
        function startAIForSelected() {
            const selected = Array.from(document.querySelectorAll('.venue-checkbox:checked')).map(cb => parseInt(cb.value, 10));
            if (selected.length === 0) return;
            const startButton = document.getElementById('start-ai-btn');
            startButton.disabled = true;
            startButton.textContent = 'Processing...';

            fetch(basePath + 'validate/batch', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ venue_ids: selected })
            }).then(res => {
                if (!res.ok) throw new Error('Failed to start AI review');
                return res.json();
            }).then(() => {
                window.location.reload();
            }).catch(err => {
                console.error(err);
                startButton.disabled = false;
                updateBatchControls();
            });
        }
    </script>
</body>
</html>
